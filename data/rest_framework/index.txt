..title..
Django REST framework

..link.. master.txt
..

..link.. rest_framework/serializers.txt
Serializers

..link.. rest_framework/views.txt
Views

..link.. rest_framework/routers.txt
Routers

..link.. rest_framework/authentication.txt
Authentication

..link.. rest_framework/permissions.txt
Permissions




..sub_title..
REST framework


..text..
Install
..code..
pip install djangorestframework

# Markdown support for the browsable API.
pip install markdown       

# Filtering support
pip install django-filter  



..text..
Add to INSTALLED_APPS
..code..
INSTALLED_APPS = [
    ...
    'rest_framework',
    'rest_framework.authtoken'
]


..text..
/app_name/urls.py
..code..
from .routers import router
from rest_framework.authtoken.views import ObtainAuthToken

from django.contrib.auth.views import LoginView
from django.utils.decorators import method_decorator
from django.views.decorators.csrf import ensure_csrf_cookie

class UserLoginView(LoginView):
    template_name="index.html"
    
    @method_decorator(ensure_csrf_cookie)
    def dispatch(self, *args, **kwargs):
        return super().dispatch(*args, **kwargs)


urlpatterns = [
    ...
    path('api/', include(router.urls)),
    path('login/', UserLoginView.as_view()),
    path('api_auth_token/', ObtainAuthToken.as_view()),
]



..text..
Pagination size
..code..
REST_FRAMEWORK = {
    ...

    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}



..text..
Default renderer classes
..code..
REST_FRAMEWORK = {
    ...

    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
}


..text..
Hierarchy
..code..
include(router.urls)
|
└── router.register('url_path', UserViewSet)
     |
     └── UserViewSet
          |
          ├── queryset = User.objects.all()
          └── serializer_class = UserSerializer
              |
              ├── model = User
              └── fields = ['url', 'username']