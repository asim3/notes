..title..
Terminal, Bash, Linux Command Line

..link.. master.txt
..

..link.. terminal/schedule.txt
Schedule Tasks
..link.. terminal/ssh.txt
SSH
..link.. terminal/advance.txt
Advance
..link.. terminal/script_file.txt
Write Script File for Terminal
..link.. terminal/install.txt
Install Packages
..link.. terminal/iso.txt
Bootable USB
..link.. terminal/aliases.txt
Aliases
..link.. terminal/cmd.txt
windows.cmd
..link.. terminal/other.txt
Other



..code..
cd
ls
ls -l

..text..
Copy
..code..
cp ~/text.txt ~/Documents/
cp ~/text.txt .

..text..
Rename
..code..
mv document downloads #folders
mv index.js app.js #files


..text..
Add Directories (Folders)
..code..
mkdir dirname


..text..
Remove Directories (Folders)
..code..
# remove directory & all directory content
rm -r dirname 

rm -rf dirname # -r (recursive) -f (force)

rm -r dirname1 dirname2 dirname3

rm filename.txt
rm filename1.txt filename2.txt filename3
rm *.pdf

rm -f filename # -f (force)
rm -fv *.txt


..text..
create files
..code..
touch text.txt


..text..
edit files
..code..
nano text.txt
gedit text.txt

..text..
read file in terminal
..code..
cat test.txt
less test.txt # press "q" to exit

..sub_title..
Permissions
..code..
sudo chown myusername file.txt
sudo chmod 664 

0 = ---
1 = --x
2 = -w-
3 = -wx
4 = r-
5 = r-x
6 = rw-
7 = rwx


..code..
sleep 3; echo done # execute 1 then 2
sleep 3 && echo 3 # execute 1 then (if 1 is ok) run 2
echo 1 || echo 3 # execute 1 then (if 1 is error) run 2


..code..
!!
# Execute last command again

>
# Save output to a file.

>>
# Append output to a file.

<
# Read input from a file.
2>
# Redirect error messages.

|
# Send the output from one program as input to another program.


..code..
& 
# the shell executes the command terminated by & in the background, 
  does not wait for the command to finish and immediately returns exit 
  code 0. Once again, & has nothing to do with &&.

|&
# a shorthand for 2>&1 | i.e. both standard output and standard error 
  of command1 are connected to command2's standard input through the pipe.
